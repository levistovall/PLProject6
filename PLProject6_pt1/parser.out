Created by PLY version 3.8 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> exp
Rule 1     exp -> atom
Rule 2     exp -> quoted_list
Rule 3     exp -> call
Rule 4     quoted_list -> QUOTE list
Rule 5     list -> LPAREN items RPAREN
Rule 6     items -> item items
Rule 7     items -> empty
Rule 8     empty -> <empty>
Rule 9     item -> atom
Rule 10    item -> quoted_list
Rule 11    item -> call
Rule 12    item -> empty
Rule 13    call -> LPAREN IF items RPAREN
Rule 14    call -> LPAREN LET LPAREN VARI NUM RPAREN RPAREN
Rule 15    call -> LPAREN LET LPAREN VARI NUM RPAREN LPAREN SIMB VARI NUM RPAREN RPAREN
Rule 16    call -> LPAREN LET LPAREN VARI NUM RPAREN LPAREN SIMB NUM VARI RPAREN RPAREN
Rule 17    call -> LPAREN SIMB items RPAREN
Rule 18    atom -> SIMB
Rule 19    atom -> bool
Rule 20    atom -> NUM
Rule 21    atom -> TEXT
Rule 22    atom -> <empty>
Rule 23    bool -> TRUE
Rule 24    bool -> FALSE
Rule 25    atom -> NIL

Terminals, with rules where they appear

FALSE                : 24
IF                   : 13
LET                  : 14 15 16
LPAREN               : 5 13 14 14 15 15 15 16 16 16 17
NIL                  : 25
NUM                  : 14 15 15 16 16 20
QUOTE                : 4
RPAREN               : 5 13 14 14 15 15 15 16 16 16 17
SIMB                 : 15 16 17 18
TEXT                 : 21
TRUE                 : 23
VARI                 : 14 15 15 16 16
error                : 

Nonterminals, with rules where they appear

atom                 : 1 9
bool                 : 19
call                 : 3 11
empty                : 7 12
exp                  : 0
item                 : 6
items                : 5 6 13 17
list                 : 4
quoted_list          : 2 10

Parsing method: LALR

state 0

    (0) S' -> . exp
    (1) exp -> . atom
    (2) exp -> . quoted_list
    (3) exp -> . call
    (18) atom -> . SIMB
    (19) atom -> . bool
    (20) atom -> . NUM
    (21) atom -> . TEXT
    (22) atom -> .
    (25) atom -> . NIL
    (4) quoted_list -> . QUOTE list
    (13) call -> . LPAREN IF items RPAREN
    (14) call -> . LPAREN LET LPAREN VARI NUM RPAREN RPAREN
    (15) call -> . LPAREN LET LPAREN VARI NUM RPAREN LPAREN SIMB VARI NUM RPAREN RPAREN
    (16) call -> . LPAREN LET LPAREN VARI NUM RPAREN LPAREN SIMB NUM VARI RPAREN RPAREN
    (17) call -> . LPAREN SIMB items RPAREN
    (23) bool -> . TRUE
    (24) bool -> . FALSE

    SIMB            shift and go to state 8
    NUM             shift and go to state 3
    TEXT            shift and go to state 7
    $end            reduce using rule 22 (atom -> .)
    NIL             shift and go to state 10
    QUOTE           shift and go to state 1
    LPAREN          shift and go to state 4
    TRUE            shift and go to state 5
    FALSE           shift and go to state 11

    bool                           shift and go to state 2
    quoted_list                    shift and go to state 6
    call                           shift and go to state 9
    exp                            shift and go to state 12
    atom                           shift and go to state 13

state 1

    (4) quoted_list -> QUOTE . list
    (5) list -> . LPAREN items RPAREN

    LPAREN          shift and go to state 14

    list                           shift and go to state 15

state 2

    (19) atom -> bool .

    SIMB            reduce using rule 19 (atom -> bool .)
    NUM             reduce using rule 19 (atom -> bool .)
    TEXT            reduce using rule 19 (atom -> bool .)
    NIL             reduce using rule 19 (atom -> bool .)
    QUOTE           reduce using rule 19 (atom -> bool .)
    LPAREN          reduce using rule 19 (atom -> bool .)
    TRUE            reduce using rule 19 (atom -> bool .)
    FALSE           reduce using rule 19 (atom -> bool .)
    RPAREN          reduce using rule 19 (atom -> bool .)
    $end            reduce using rule 19 (atom -> bool .)


state 3

    (20) atom -> NUM .

    SIMB            reduce using rule 20 (atom -> NUM .)
    NUM             reduce using rule 20 (atom -> NUM .)
    TEXT            reduce using rule 20 (atom -> NUM .)
    NIL             reduce using rule 20 (atom -> NUM .)
    QUOTE           reduce using rule 20 (atom -> NUM .)
    LPAREN          reduce using rule 20 (atom -> NUM .)
    TRUE            reduce using rule 20 (atom -> NUM .)
    FALSE           reduce using rule 20 (atom -> NUM .)
    RPAREN          reduce using rule 20 (atom -> NUM .)
    $end            reduce using rule 20 (atom -> NUM .)


state 4

    (13) call -> LPAREN . IF items RPAREN
    (14) call -> LPAREN . LET LPAREN VARI NUM RPAREN RPAREN
    (15) call -> LPAREN . LET LPAREN VARI NUM RPAREN LPAREN SIMB VARI NUM RPAREN RPAREN
    (16) call -> LPAREN . LET LPAREN VARI NUM RPAREN LPAREN SIMB NUM VARI RPAREN RPAREN
    (17) call -> LPAREN . SIMB items RPAREN

    IF              shift and go to state 18
    LET             shift and go to state 17
    SIMB            shift and go to state 16


state 5

    (23) bool -> TRUE .

    $end            reduce using rule 23 (bool -> TRUE .)
    SIMB            reduce using rule 23 (bool -> TRUE .)
    NUM             reduce using rule 23 (bool -> TRUE .)
    TEXT            reduce using rule 23 (bool -> TRUE .)
    NIL             reduce using rule 23 (bool -> TRUE .)
    QUOTE           reduce using rule 23 (bool -> TRUE .)
    LPAREN          reduce using rule 23 (bool -> TRUE .)
    TRUE            reduce using rule 23 (bool -> TRUE .)
    FALSE           reduce using rule 23 (bool -> TRUE .)
    RPAREN          reduce using rule 23 (bool -> TRUE .)


state 6

    (2) exp -> quoted_list .

    $end            reduce using rule 2 (exp -> quoted_list .)


state 7

    (21) atom -> TEXT .

    SIMB            reduce using rule 21 (atom -> TEXT .)
    NUM             reduce using rule 21 (atom -> TEXT .)
    TEXT            reduce using rule 21 (atom -> TEXT .)
    NIL             reduce using rule 21 (atom -> TEXT .)
    QUOTE           reduce using rule 21 (atom -> TEXT .)
    LPAREN          reduce using rule 21 (atom -> TEXT .)
    TRUE            reduce using rule 21 (atom -> TEXT .)
    FALSE           reduce using rule 21 (atom -> TEXT .)
    RPAREN          reduce using rule 21 (atom -> TEXT .)
    $end            reduce using rule 21 (atom -> TEXT .)


state 8

    (18) atom -> SIMB .

    SIMB            reduce using rule 18 (atom -> SIMB .)
    NUM             reduce using rule 18 (atom -> SIMB .)
    TEXT            reduce using rule 18 (atom -> SIMB .)
    NIL             reduce using rule 18 (atom -> SIMB .)
    QUOTE           reduce using rule 18 (atom -> SIMB .)
    LPAREN          reduce using rule 18 (atom -> SIMB .)
    TRUE            reduce using rule 18 (atom -> SIMB .)
    FALSE           reduce using rule 18 (atom -> SIMB .)
    RPAREN          reduce using rule 18 (atom -> SIMB .)
    $end            reduce using rule 18 (atom -> SIMB .)


state 9

    (3) exp -> call .

    $end            reduce using rule 3 (exp -> call .)


state 10

    (25) atom -> NIL .

    SIMB            reduce using rule 25 (atom -> NIL .)
    NUM             reduce using rule 25 (atom -> NIL .)
    TEXT            reduce using rule 25 (atom -> NIL .)
    NIL             reduce using rule 25 (atom -> NIL .)
    QUOTE           reduce using rule 25 (atom -> NIL .)
    LPAREN          reduce using rule 25 (atom -> NIL .)
    TRUE            reduce using rule 25 (atom -> NIL .)
    FALSE           reduce using rule 25 (atom -> NIL .)
    RPAREN          reduce using rule 25 (atom -> NIL .)
    $end            reduce using rule 25 (atom -> NIL .)


state 11

    (24) bool -> FALSE .

    $end            reduce using rule 24 (bool -> FALSE .)
    SIMB            reduce using rule 24 (bool -> FALSE .)
    NUM             reduce using rule 24 (bool -> FALSE .)
    TEXT            reduce using rule 24 (bool -> FALSE .)
    NIL             reduce using rule 24 (bool -> FALSE .)
    QUOTE           reduce using rule 24 (bool -> FALSE .)
    LPAREN          reduce using rule 24 (bool -> FALSE .)
    TRUE            reduce using rule 24 (bool -> FALSE .)
    FALSE           reduce using rule 24 (bool -> FALSE .)
    RPAREN          reduce using rule 24 (bool -> FALSE .)


state 12

    (0) S' -> exp .



state 13

    (1) exp -> atom .

    $end            reduce using rule 1 (exp -> atom .)


state 14

    (5) list -> LPAREN . items RPAREN
    (6) items -> . item items
    (7) items -> . empty
    (9) item -> . atom
    (10) item -> . quoted_list
    (11) item -> . call
    (12) item -> . empty
    (8) empty -> .
    (18) atom -> . SIMB
    (19) atom -> . bool
    (20) atom -> . NUM
    (21) atom -> . TEXT
    (22) atom -> .
    (25) atom -> . NIL
    (4) quoted_list -> . QUOTE list
    (13) call -> . LPAREN IF items RPAREN
    (14) call -> . LPAREN LET LPAREN VARI NUM RPAREN RPAREN
    (15) call -> . LPAREN LET LPAREN VARI NUM RPAREN LPAREN SIMB VARI NUM RPAREN RPAREN
    (16) call -> . LPAREN LET LPAREN VARI NUM RPAREN LPAREN SIMB NUM VARI RPAREN RPAREN
    (17) call -> . LPAREN SIMB items RPAREN
    (23) bool -> . TRUE
    (24) bool -> . FALSE

  ! shift/reduce conflict for SIMB resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for TEXT resolved as shift
  ! shift/reduce conflict for SIMB resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for TEXT resolved as shift
  ! reduce/reduce conflict for NIL resolved using rule 8 (empty -> .)
  ! reduce/reduce conflict for QUOTE resolved using rule 8 (empty -> .)
  ! reduce/reduce conflict for LPAREN resolved using rule 8 (empty -> .)
  ! reduce/reduce conflict for TRUE resolved using rule 8 (empty -> .)
  ! reduce/reduce conflict for FALSE resolved using rule 8 (empty -> .)
  ! reduce/reduce conflict for RPAREN resolved using rule 8 (empty -> .)
  ! shift/reduce conflict for NIL resolved as shift
  ! shift/reduce conflict for QUOTE resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    RPAREN          reduce using rule 8 (empty -> .)
    SIMB            shift and go to state 8
    NUM             shift and go to state 3
    TEXT            shift and go to state 7
    NIL             shift and go to state 10
    QUOTE           shift and go to state 1
    LPAREN          shift and go to state 4
    TRUE            shift and go to state 5
    FALSE           shift and go to state 11

  ! SIMB            [ reduce using rule 8 (empty -> .) ]
  ! NUM             [ reduce using rule 8 (empty -> .) ]
  ! TEXT            [ reduce using rule 8 (empty -> .) ]
  ! NIL             [ reduce using rule 8 (empty -> .) ]
  ! QUOTE           [ reduce using rule 8 (empty -> .) ]
  ! LPAREN          [ reduce using rule 8 (empty -> .) ]
  ! TRUE            [ reduce using rule 8 (empty -> .) ]
  ! FALSE           [ reduce using rule 8 (empty -> .) ]
  ! SIMB            [ reduce using rule 22 (atom -> .) ]
  ! NUM             [ reduce using rule 22 (atom -> .) ]
  ! TEXT            [ reduce using rule 22 (atom -> .) ]
  ! NIL             [ reduce using rule 22 (atom -> .) ]
  ! QUOTE           [ reduce using rule 22 (atom -> .) ]
  ! LPAREN          [ reduce using rule 22 (atom -> .) ]
  ! TRUE            [ reduce using rule 22 (atom -> .) ]
  ! FALSE           [ reduce using rule 22 (atom -> .) ]
  ! RPAREN          [ reduce using rule 22 (atom -> .) ]

    item                           shift and go to state 19
    bool                           shift and go to state 2
    quoted_list                    shift and go to state 20
    empty                          shift and go to state 21
    call                           shift and go to state 22
    atom                           shift and go to state 23
    items                          shift and go to state 24

state 15

    (4) quoted_list -> QUOTE list .

    SIMB            reduce using rule 4 (quoted_list -> QUOTE list .)
    NUM             reduce using rule 4 (quoted_list -> QUOTE list .)
    TEXT            reduce using rule 4 (quoted_list -> QUOTE list .)
    NIL             reduce using rule 4 (quoted_list -> QUOTE list .)
    QUOTE           reduce using rule 4 (quoted_list -> QUOTE list .)
    LPAREN          reduce using rule 4 (quoted_list -> QUOTE list .)
    TRUE            reduce using rule 4 (quoted_list -> QUOTE list .)
    FALSE           reduce using rule 4 (quoted_list -> QUOTE list .)
    RPAREN          reduce using rule 4 (quoted_list -> QUOTE list .)
    $end            reduce using rule 4 (quoted_list -> QUOTE list .)


state 16

    (17) call -> LPAREN SIMB . items RPAREN
    (6) items -> . item items
    (7) items -> . empty
    (9) item -> . atom
    (10) item -> . quoted_list
    (11) item -> . call
    (12) item -> . empty
    (8) empty -> .
    (18) atom -> . SIMB
    (19) atom -> . bool
    (20) atom -> . NUM
    (21) atom -> . TEXT
    (22) atom -> .
    (25) atom -> . NIL
    (4) quoted_list -> . QUOTE list
    (13) call -> . LPAREN IF items RPAREN
    (14) call -> . LPAREN LET LPAREN VARI NUM RPAREN RPAREN
    (15) call -> . LPAREN LET LPAREN VARI NUM RPAREN LPAREN SIMB VARI NUM RPAREN RPAREN
    (16) call -> . LPAREN LET LPAREN VARI NUM RPAREN LPAREN SIMB NUM VARI RPAREN RPAREN
    (17) call -> . LPAREN SIMB items RPAREN
    (23) bool -> . TRUE
    (24) bool -> . FALSE

  ! shift/reduce conflict for SIMB resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for TEXT resolved as shift
  ! shift/reduce conflict for SIMB resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for TEXT resolved as shift
  ! reduce/reduce conflict for NIL resolved using rule 8 (empty -> .)
  ! reduce/reduce conflict for QUOTE resolved using rule 8 (empty -> .)
  ! reduce/reduce conflict for LPAREN resolved using rule 8 (empty -> .)
  ! reduce/reduce conflict for TRUE resolved using rule 8 (empty -> .)
  ! reduce/reduce conflict for FALSE resolved using rule 8 (empty -> .)
  ! reduce/reduce conflict for RPAREN resolved using rule 8 (empty -> .)
  ! shift/reduce conflict for NIL resolved as shift
  ! shift/reduce conflict for QUOTE resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    RPAREN          reduce using rule 8 (empty -> .)
    SIMB            shift and go to state 8
    NUM             shift and go to state 3
    TEXT            shift and go to state 7
    NIL             shift and go to state 10
    QUOTE           shift and go to state 1
    LPAREN          shift and go to state 4
    TRUE            shift and go to state 5
    FALSE           shift and go to state 11

  ! SIMB            [ reduce using rule 8 (empty -> .) ]
  ! NUM             [ reduce using rule 8 (empty -> .) ]
  ! TEXT            [ reduce using rule 8 (empty -> .) ]
  ! NIL             [ reduce using rule 8 (empty -> .) ]
  ! QUOTE           [ reduce using rule 8 (empty -> .) ]
  ! LPAREN          [ reduce using rule 8 (empty -> .) ]
  ! TRUE            [ reduce using rule 8 (empty -> .) ]
  ! FALSE           [ reduce using rule 8 (empty -> .) ]
  ! SIMB            [ reduce using rule 22 (atom -> .) ]
  ! NUM             [ reduce using rule 22 (atom -> .) ]
  ! TEXT            [ reduce using rule 22 (atom -> .) ]
  ! NIL             [ reduce using rule 22 (atom -> .) ]
  ! QUOTE           [ reduce using rule 22 (atom -> .) ]
  ! LPAREN          [ reduce using rule 22 (atom -> .) ]
  ! TRUE            [ reduce using rule 22 (atom -> .) ]
  ! FALSE           [ reduce using rule 22 (atom -> .) ]
  ! RPAREN          [ reduce using rule 22 (atom -> .) ]

    item                           shift and go to state 19
    bool                           shift and go to state 2
    quoted_list                    shift and go to state 20
    empty                          shift and go to state 21
    call                           shift and go to state 22
    atom                           shift and go to state 23
    items                          shift and go to state 25

state 17

    (14) call -> LPAREN LET . LPAREN VARI NUM RPAREN RPAREN
    (15) call -> LPAREN LET . LPAREN VARI NUM RPAREN LPAREN SIMB VARI NUM RPAREN RPAREN
    (16) call -> LPAREN LET . LPAREN VARI NUM RPAREN LPAREN SIMB NUM VARI RPAREN RPAREN

    LPAREN          shift and go to state 26


state 18

    (13) call -> LPAREN IF . items RPAREN
    (6) items -> . item items
    (7) items -> . empty
    (9) item -> . atom
    (10) item -> . quoted_list
    (11) item -> . call
    (12) item -> . empty
    (8) empty -> .
    (18) atom -> . SIMB
    (19) atom -> . bool
    (20) atom -> . NUM
    (21) atom -> . TEXT
    (22) atom -> .
    (25) atom -> . NIL
    (4) quoted_list -> . QUOTE list
    (13) call -> . LPAREN IF items RPAREN
    (14) call -> . LPAREN LET LPAREN VARI NUM RPAREN RPAREN
    (15) call -> . LPAREN LET LPAREN VARI NUM RPAREN LPAREN SIMB VARI NUM RPAREN RPAREN
    (16) call -> . LPAREN LET LPAREN VARI NUM RPAREN LPAREN SIMB NUM VARI RPAREN RPAREN
    (17) call -> . LPAREN SIMB items RPAREN
    (23) bool -> . TRUE
    (24) bool -> . FALSE

  ! shift/reduce conflict for SIMB resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for TEXT resolved as shift
  ! shift/reduce conflict for SIMB resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for TEXT resolved as shift
  ! reduce/reduce conflict for NIL resolved using rule 8 (empty -> .)
  ! reduce/reduce conflict for QUOTE resolved using rule 8 (empty -> .)
  ! reduce/reduce conflict for LPAREN resolved using rule 8 (empty -> .)
  ! reduce/reduce conflict for TRUE resolved using rule 8 (empty -> .)
  ! reduce/reduce conflict for FALSE resolved using rule 8 (empty -> .)
  ! reduce/reduce conflict for RPAREN resolved using rule 8 (empty -> .)
  ! shift/reduce conflict for NIL resolved as shift
  ! shift/reduce conflict for QUOTE resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    RPAREN          reduce using rule 8 (empty -> .)
    SIMB            shift and go to state 8
    NUM             shift and go to state 3
    TEXT            shift and go to state 7
    NIL             shift and go to state 10
    QUOTE           shift and go to state 1
    LPAREN          shift and go to state 4
    TRUE            shift and go to state 5
    FALSE           shift and go to state 11

  ! SIMB            [ reduce using rule 8 (empty -> .) ]
  ! NUM             [ reduce using rule 8 (empty -> .) ]
  ! TEXT            [ reduce using rule 8 (empty -> .) ]
  ! NIL             [ reduce using rule 8 (empty -> .) ]
  ! QUOTE           [ reduce using rule 8 (empty -> .) ]
  ! LPAREN          [ reduce using rule 8 (empty -> .) ]
  ! TRUE            [ reduce using rule 8 (empty -> .) ]
  ! FALSE           [ reduce using rule 8 (empty -> .) ]
  ! SIMB            [ reduce using rule 22 (atom -> .) ]
  ! NUM             [ reduce using rule 22 (atom -> .) ]
  ! TEXT            [ reduce using rule 22 (atom -> .) ]
  ! NIL             [ reduce using rule 22 (atom -> .) ]
  ! QUOTE           [ reduce using rule 22 (atom -> .) ]
  ! LPAREN          [ reduce using rule 22 (atom -> .) ]
  ! TRUE            [ reduce using rule 22 (atom -> .) ]
  ! FALSE           [ reduce using rule 22 (atom -> .) ]
  ! RPAREN          [ reduce using rule 22 (atom -> .) ]

    item                           shift and go to state 19
    bool                           shift and go to state 2
    quoted_list                    shift and go to state 20
    empty                          shift and go to state 21
    call                           shift and go to state 22
    atom                           shift and go to state 23
    items                          shift and go to state 27

state 19

    (6) items -> item . items
    (6) items -> . item items
    (7) items -> . empty
    (9) item -> . atom
    (10) item -> . quoted_list
    (11) item -> . call
    (12) item -> . empty
    (8) empty -> .
    (18) atom -> . SIMB
    (19) atom -> . bool
    (20) atom -> . NUM
    (21) atom -> . TEXT
    (22) atom -> .
    (25) atom -> . NIL
    (4) quoted_list -> . QUOTE list
    (13) call -> . LPAREN IF items RPAREN
    (14) call -> . LPAREN LET LPAREN VARI NUM RPAREN RPAREN
    (15) call -> . LPAREN LET LPAREN VARI NUM RPAREN LPAREN SIMB VARI NUM RPAREN RPAREN
    (16) call -> . LPAREN LET LPAREN VARI NUM RPAREN LPAREN SIMB NUM VARI RPAREN RPAREN
    (17) call -> . LPAREN SIMB items RPAREN
    (23) bool -> . TRUE
    (24) bool -> . FALSE

  ! shift/reduce conflict for SIMB resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for TEXT resolved as shift
  ! shift/reduce conflict for SIMB resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for TEXT resolved as shift
  ! reduce/reduce conflict for NIL resolved using rule 8 (empty -> .)
  ! reduce/reduce conflict for QUOTE resolved using rule 8 (empty -> .)
  ! reduce/reduce conflict for LPAREN resolved using rule 8 (empty -> .)
  ! reduce/reduce conflict for TRUE resolved using rule 8 (empty -> .)
  ! reduce/reduce conflict for FALSE resolved using rule 8 (empty -> .)
  ! reduce/reduce conflict for RPAREN resolved using rule 8 (empty -> .)
  ! shift/reduce conflict for NIL resolved as shift
  ! shift/reduce conflict for QUOTE resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    RPAREN          reduce using rule 8 (empty -> .)
    SIMB            shift and go to state 8
    NUM             shift and go to state 3
    TEXT            shift and go to state 7
    NIL             shift and go to state 10
    QUOTE           shift and go to state 1
    LPAREN          shift and go to state 4
    TRUE            shift and go to state 5
    FALSE           shift and go to state 11

  ! SIMB            [ reduce using rule 8 (empty -> .) ]
  ! NUM             [ reduce using rule 8 (empty -> .) ]
  ! TEXT            [ reduce using rule 8 (empty -> .) ]
  ! NIL             [ reduce using rule 8 (empty -> .) ]
  ! QUOTE           [ reduce using rule 8 (empty -> .) ]
  ! LPAREN          [ reduce using rule 8 (empty -> .) ]
  ! TRUE            [ reduce using rule 8 (empty -> .) ]
  ! FALSE           [ reduce using rule 8 (empty -> .) ]
  ! SIMB            [ reduce using rule 22 (atom -> .) ]
  ! NUM             [ reduce using rule 22 (atom -> .) ]
  ! TEXT            [ reduce using rule 22 (atom -> .) ]
  ! NIL             [ reduce using rule 22 (atom -> .) ]
  ! QUOTE           [ reduce using rule 22 (atom -> .) ]
  ! LPAREN          [ reduce using rule 22 (atom -> .) ]
  ! TRUE            [ reduce using rule 22 (atom -> .) ]
  ! FALSE           [ reduce using rule 22 (atom -> .) ]
  ! RPAREN          [ reduce using rule 22 (atom -> .) ]

    item                           shift and go to state 19
    bool                           shift and go to state 2
    quoted_list                    shift and go to state 20
    empty                          shift and go to state 21
    call                           shift and go to state 22
    atom                           shift and go to state 23
    items                          shift and go to state 28

state 20

    (10) item -> quoted_list .

    SIMB            reduce using rule 10 (item -> quoted_list .)
    NUM             reduce using rule 10 (item -> quoted_list .)
    TEXT            reduce using rule 10 (item -> quoted_list .)
    NIL             reduce using rule 10 (item -> quoted_list .)
    QUOTE           reduce using rule 10 (item -> quoted_list .)
    LPAREN          reduce using rule 10 (item -> quoted_list .)
    TRUE            reduce using rule 10 (item -> quoted_list .)
    FALSE           reduce using rule 10 (item -> quoted_list .)
    RPAREN          reduce using rule 10 (item -> quoted_list .)


state 21

    (7) items -> empty .
    (12) item -> empty .

  ! reduce/reduce conflict for RPAREN resolved using rule 7 (items -> empty .)
    RPAREN          reduce using rule 7 (items -> empty .)
    SIMB            reduce using rule 12 (item -> empty .)
    NUM             reduce using rule 12 (item -> empty .)
    TEXT            reduce using rule 12 (item -> empty .)
    NIL             reduce using rule 12 (item -> empty .)
    QUOTE           reduce using rule 12 (item -> empty .)
    LPAREN          reduce using rule 12 (item -> empty .)
    TRUE            reduce using rule 12 (item -> empty .)
    FALSE           reduce using rule 12 (item -> empty .)

  ! RPAREN          [ reduce using rule 12 (item -> empty .) ]


state 22

    (11) item -> call .

    SIMB            reduce using rule 11 (item -> call .)
    NUM             reduce using rule 11 (item -> call .)
    TEXT            reduce using rule 11 (item -> call .)
    NIL             reduce using rule 11 (item -> call .)
    QUOTE           reduce using rule 11 (item -> call .)
    LPAREN          reduce using rule 11 (item -> call .)
    TRUE            reduce using rule 11 (item -> call .)
    FALSE           reduce using rule 11 (item -> call .)
    RPAREN          reduce using rule 11 (item -> call .)


state 23

    (9) item -> atom .

    SIMB            reduce using rule 9 (item -> atom .)
    NUM             reduce using rule 9 (item -> atom .)
    TEXT            reduce using rule 9 (item -> atom .)
    NIL             reduce using rule 9 (item -> atom .)
    QUOTE           reduce using rule 9 (item -> atom .)
    LPAREN          reduce using rule 9 (item -> atom .)
    TRUE            reduce using rule 9 (item -> atom .)
    FALSE           reduce using rule 9 (item -> atom .)
    RPAREN          reduce using rule 9 (item -> atom .)


state 24

    (5) list -> LPAREN items . RPAREN

    RPAREN          shift and go to state 29


state 25

    (17) call -> LPAREN SIMB items . RPAREN

    RPAREN          shift and go to state 30


state 26

    (14) call -> LPAREN LET LPAREN . VARI NUM RPAREN RPAREN
    (15) call -> LPAREN LET LPAREN . VARI NUM RPAREN LPAREN SIMB VARI NUM RPAREN RPAREN
    (16) call -> LPAREN LET LPAREN . VARI NUM RPAREN LPAREN SIMB NUM VARI RPAREN RPAREN

    VARI            shift and go to state 31


state 27

    (13) call -> LPAREN IF items . RPAREN

    RPAREN          shift and go to state 32


state 28

    (6) items -> item items .

    RPAREN          reduce using rule 6 (items -> item items .)


state 29

    (5) list -> LPAREN items RPAREN .

    $end            reduce using rule 5 (list -> LPAREN items RPAREN .)
    SIMB            reduce using rule 5 (list -> LPAREN items RPAREN .)
    NUM             reduce using rule 5 (list -> LPAREN items RPAREN .)
    TEXT            reduce using rule 5 (list -> LPAREN items RPAREN .)
    NIL             reduce using rule 5 (list -> LPAREN items RPAREN .)
    QUOTE           reduce using rule 5 (list -> LPAREN items RPAREN .)
    LPAREN          reduce using rule 5 (list -> LPAREN items RPAREN .)
    TRUE            reduce using rule 5 (list -> LPAREN items RPAREN .)
    FALSE           reduce using rule 5 (list -> LPAREN items RPAREN .)
    RPAREN          reduce using rule 5 (list -> LPAREN items RPAREN .)


state 30

    (17) call -> LPAREN SIMB items RPAREN .

    SIMB            reduce using rule 17 (call -> LPAREN SIMB items RPAREN .)
    NUM             reduce using rule 17 (call -> LPAREN SIMB items RPAREN .)
    TEXT            reduce using rule 17 (call -> LPAREN SIMB items RPAREN .)
    NIL             reduce using rule 17 (call -> LPAREN SIMB items RPAREN .)
    QUOTE           reduce using rule 17 (call -> LPAREN SIMB items RPAREN .)
    LPAREN          reduce using rule 17 (call -> LPAREN SIMB items RPAREN .)
    TRUE            reduce using rule 17 (call -> LPAREN SIMB items RPAREN .)
    FALSE           reduce using rule 17 (call -> LPAREN SIMB items RPAREN .)
    RPAREN          reduce using rule 17 (call -> LPAREN SIMB items RPAREN .)
    $end            reduce using rule 17 (call -> LPAREN SIMB items RPAREN .)


state 31

    (14) call -> LPAREN LET LPAREN VARI . NUM RPAREN RPAREN
    (15) call -> LPAREN LET LPAREN VARI . NUM RPAREN LPAREN SIMB VARI NUM RPAREN RPAREN
    (16) call -> LPAREN LET LPAREN VARI . NUM RPAREN LPAREN SIMB NUM VARI RPAREN RPAREN

    NUM             shift and go to state 33


state 32

    (13) call -> LPAREN IF items RPAREN .

    SIMB            reduce using rule 13 (call -> LPAREN IF items RPAREN .)
    NUM             reduce using rule 13 (call -> LPAREN IF items RPAREN .)
    TEXT            reduce using rule 13 (call -> LPAREN IF items RPAREN .)
    NIL             reduce using rule 13 (call -> LPAREN IF items RPAREN .)
    QUOTE           reduce using rule 13 (call -> LPAREN IF items RPAREN .)
    LPAREN          reduce using rule 13 (call -> LPAREN IF items RPAREN .)
    TRUE            reduce using rule 13 (call -> LPAREN IF items RPAREN .)
    FALSE           reduce using rule 13 (call -> LPAREN IF items RPAREN .)
    RPAREN          reduce using rule 13 (call -> LPAREN IF items RPAREN .)
    $end            reduce using rule 13 (call -> LPAREN IF items RPAREN .)


state 33

    (14) call -> LPAREN LET LPAREN VARI NUM . RPAREN RPAREN
    (15) call -> LPAREN LET LPAREN VARI NUM . RPAREN LPAREN SIMB VARI NUM RPAREN RPAREN
    (16) call -> LPAREN LET LPAREN VARI NUM . RPAREN LPAREN SIMB NUM VARI RPAREN RPAREN

    RPAREN          shift and go to state 34


state 34

    (14) call -> LPAREN LET LPAREN VARI NUM RPAREN . RPAREN
    (15) call -> LPAREN LET LPAREN VARI NUM RPAREN . LPAREN SIMB VARI NUM RPAREN RPAREN
    (16) call -> LPAREN LET LPAREN VARI NUM RPAREN . LPAREN SIMB NUM VARI RPAREN RPAREN

    RPAREN          shift and go to state 36
    LPAREN          shift and go to state 35


state 35

    (15) call -> LPAREN LET LPAREN VARI NUM RPAREN LPAREN . SIMB VARI NUM RPAREN RPAREN
    (16) call -> LPAREN LET LPAREN VARI NUM RPAREN LPAREN . SIMB NUM VARI RPAREN RPAREN

    SIMB            shift and go to state 37


state 36

    (14) call -> LPAREN LET LPAREN VARI NUM RPAREN RPAREN .

    SIMB            reduce using rule 14 (call -> LPAREN LET LPAREN VARI NUM RPAREN RPAREN .)
    NUM             reduce using rule 14 (call -> LPAREN LET LPAREN VARI NUM RPAREN RPAREN .)
    TEXT            reduce using rule 14 (call -> LPAREN LET LPAREN VARI NUM RPAREN RPAREN .)
    NIL             reduce using rule 14 (call -> LPAREN LET LPAREN VARI NUM RPAREN RPAREN .)
    QUOTE           reduce using rule 14 (call -> LPAREN LET LPAREN VARI NUM RPAREN RPAREN .)
    LPAREN          reduce using rule 14 (call -> LPAREN LET LPAREN VARI NUM RPAREN RPAREN .)
    TRUE            reduce using rule 14 (call -> LPAREN LET LPAREN VARI NUM RPAREN RPAREN .)
    FALSE           reduce using rule 14 (call -> LPAREN LET LPAREN VARI NUM RPAREN RPAREN .)
    RPAREN          reduce using rule 14 (call -> LPAREN LET LPAREN VARI NUM RPAREN RPAREN .)
    $end            reduce using rule 14 (call -> LPAREN LET LPAREN VARI NUM RPAREN RPAREN .)


state 37

    (15) call -> LPAREN LET LPAREN VARI NUM RPAREN LPAREN SIMB . VARI NUM RPAREN RPAREN
    (16) call -> LPAREN LET LPAREN VARI NUM RPAREN LPAREN SIMB . NUM VARI RPAREN RPAREN

    VARI            shift and go to state 39
    NUM             shift and go to state 38


state 38

    (16) call -> LPAREN LET LPAREN VARI NUM RPAREN LPAREN SIMB NUM . VARI RPAREN RPAREN

    VARI            shift and go to state 40


state 39

    