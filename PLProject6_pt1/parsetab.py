
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '4F68AFEF1DBE774EE125B3ABEBBD42F3'
    
_lr_action_items = {'QUOTE':([0,2,3,5,7,8,10,11,14,15,16,18,19,20,21,22,23,29,30,32,36,44,45,],[1,-19,-20,-23,-21,-18,-25,-24,1,-4,1,1,1,-10,-12,-11,-9,-5,-17,-13,-14,-16,-15,]),'$end':([0,2,3,5,6,7,8,9,10,11,12,13,15,29,30,32,36,44,45,],[-22,-19,-20,-23,-2,-21,-18,-3,-25,-24,0,-1,-4,-5,-17,-13,-14,-16,-15,]),'NUM':([0,2,3,5,7,8,10,11,14,15,16,18,19,20,21,22,23,29,30,31,32,36,37,39,44,45,],[3,-19,-20,-23,-21,-18,-25,-24,3,-4,3,3,3,-10,-12,-11,-9,-5,-17,33,-13,-14,38,41,-16,-15,]),'LPAREN':([0,1,2,3,5,7,8,10,11,14,15,16,17,18,19,20,21,22,23,29,30,32,34,36,44,45,],[4,14,-19,-20,-23,-21,-18,-25,-24,4,-4,4,26,4,4,-10,-12,-11,-9,-5,-17,-13,35,-14,-16,-15,]),'TRUE':([0,2,3,5,7,8,10,11,14,15,16,18,19,20,21,22,23,29,30,32,36,44,45,],[5,-19,-20,-23,-21,-18,-25,-24,5,-4,5,5,5,-10,-12,-11,-9,-5,-17,-13,-14,-16,-15,]),'TEXT':([0,2,3,5,7,8,10,11,14,15,16,18,19,20,21,22,23,29,30,32,36,44,45,],[7,-19,-20,-23,-21,-18,-25,-24,7,-4,7,7,7,-10,-12,-11,-9,-5,-17,-13,-14,-16,-15,]),'VARI':([26,37,38,],[31,39,40,]),'RPAREN':([2,3,5,7,8,10,11,14,15,16,18,19,20,21,22,23,24,25,27,28,29,30,32,33,34,36,40,41,42,43,44,45,],[-19,-20,-23,-21,-18,-25,-24,-8,-4,-8,-8,-8,-10,-7,-11,-9,29,30,32,-6,-5,-17,-13,34,36,-14,42,43,44,45,-16,-15,]),'SIMB':([0,2,3,4,5,7,8,10,11,14,15,16,18,19,20,21,22,23,29,30,32,35,36,44,45,],[8,-19,-20,16,-23,-21,-18,-25,-24,8,-4,8,8,8,-10,-12,-11,-9,-5,-17,-13,37,-14,-16,-15,]),'NIL':([0,2,3,5,7,8,10,11,14,15,16,18,19,20,21,22,23,29,30,32,36,44,45,],[10,-19,-20,-23,-21,-18,-25,-24,10,-4,10,10,10,-10,-12,-11,-9,-5,-17,-13,-14,-16,-15,]),'FALSE':([0,2,3,5,7,8,10,11,14,15,16,18,19,20,21,22,23,29,30,32,36,44,45,],[11,-19,-20,-23,-21,-18,-25,-24,11,-4,11,11,11,-10,-12,-11,-9,-5,-17,-13,-14,-16,-15,]),'LET':([4,],[17,]),'IF':([4,],[18,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'item':([14,16,18,19,],[19,19,19,19,]),'bool':([0,14,16,18,19,],[2,2,2,2,2,]),'quoted_list':([0,14,16,18,19,],[6,20,20,20,20,]),'list':([1,],[15,]),'empty':([14,16,18,19,],[21,21,21,21,]),'call':([0,14,16,18,19,],[9,22,22,22,22,]),'exp':([0,],[12,]),'atom':([0,14,16,18,19,],[13,23,23,23,23,]),'items':([14,16,18,19,],[24,25,27,28,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> exp","S'",1,None,None,None),
  ('exp -> atom','exp',1,'p_exp_atom','yacc.py',144),
  ('exp -> quoted_list','exp',1,'p_exp_qlist','yacc.py',148),
  ('exp -> call','exp',1,'p_exp_call','yacc.py',152),
  ('quoted_list -> QUOTE list','quoted_list',2,'p_quoted_list','yacc.py',156),
  ('list -> LPAREN items RPAREN','list',3,'p_list','yacc.py',160),
  ('items -> item items','items',2,'p_items','yacc.py',164),
  ('items -> empty','items',1,'p_items_empty','yacc.py',168),
  ('empty -> <empty>','empty',0,'p_empty','yacc.py',172),
  ('item -> atom','item',1,'p_item_atom','yacc.py',176),
  ('item -> quoted_list','item',1,'p_item_list','yacc.py',184),
  ('item -> call','item',1,'p_item_call','yacc.py',188),
  ('item -> empty','item',1,'p_item_empty','yacc.py',192),
  ('call -> LPAREN IF items RPAREN','call',4,'p_conditional','yacc.py',196),
  ('call -> LPAREN LET LPAREN VARI NUM RPAREN RPAREN','call',7,'p_let_only','yacc.py',201),
  ('call -> LPAREN LET LPAREN VARI NUM RPAREN LPAREN SIMB VARI NUM RPAREN RPAREN','call',12,'p_let_varileft','yacc.py',207),
  ('call -> LPAREN LET LPAREN VARI NUM RPAREN LPAREN SIMB NUM VARI RPAREN RPAREN','call',12,'p_let_variright','yacc.py',217),
  ('call -> LPAREN SIMB items RPAREN','call',4,'p_call','yacc.py',228),
  ('atom -> SIMB','atom',1,'p_atom_simbol','yacc.py',235),
  ('atom -> bool','atom',1,'p_atom_bool','yacc.py',239),
  ('atom -> NUM','atom',1,'p_atom_num','yacc.py',243),
  ('atom -> TEXT','atom',1,'p_atom_word','yacc.py',247),
  ('atom -> <empty>','atom',0,'p_atom_empty','yacc.py',251),
  ('bool -> TRUE','bool',1,'p_true','yacc.py',255),
  ('bool -> FALSE','bool',1,'p_false','yacc.py',259),
  ('atom -> NIL','atom',1,'p_nil','yacc.py',263),
]
